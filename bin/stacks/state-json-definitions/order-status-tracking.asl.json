{
  "StartAt": "checkOrderStatus",
  "States": {
    "checkOrderStatus": {
      "Next": "orderStatusChanged?",
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 1,
          "BackoffRate": 2
        }
      ],
      "Type": "Task",
      "ResultPath": "$.prevCheckOrderOutput",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "${checkOrderStatusLambdaArn}",
        "Payload.$": "$"
      }
    },
    "waitStep": {
      "Type": "Wait",
      "Seconds": 10,
      "Next": "checkOrderStatus"
    },
    "orderStatusTerminal?": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.prevCheckOrderOutput.Payload.orderStatus",
          "StringEquals": "open",
          "Next": "waitStep"
        },
        {
          "Variable": "$.prevCheckOrderOutput.Payload.orderStatus",
          "StringEquals": "filled",
          "Next": "orderInTerminalState"
        },
        {
          "Variable": "$.prevCheckOrderOutput.Payload.orderStatus",
          "StringEquals": "cancelled",
          "Next": "orderInTerminalState"
        },
        {
          "Variable": "$.prevCheckOrderOutput.Payload.orderStatus",
          "StringEquals": "expired",
          "Next": "orderInTerminalState"
        }
      ]
    },
    "UpdateOrderStatusStep": {
      "Next": "orderStatusTerminal?",
      "Type": "Task",
      "ResultPath": "$.updateOrderStatusOutput",
      "Resource": "arn:aws:states:::dynamodb:updateItem",
      "Parameters": {
        "Key": {
          "orderHash": {
            "S.$": "$.orderHash"
          }
        },
        "TableName": "Orders",
        "ExpressionAttributeValues": {
          ":orderStatus": {
            "S": "$.prevCheckOrderOutput.Payload.orderStatus"
          }
        },
        "UpdateExpression": "SET orderStatus = :orderStatus"
      }
    },
    "orderStatusChanged?": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.prevCheckOrderOutput.Payload.orderStatusChanged",
          "BooleanEquals": true,
          "Next": "UpdateOrderStatusStep"
        }
      ],
      "Default": "waitStep"
    },
    "orderInTerminalState": {
      "Type": "Succeed"
    }
  }
}
