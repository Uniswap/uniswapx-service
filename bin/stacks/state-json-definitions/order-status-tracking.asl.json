{
    "StartAt": "GoudaService-Check-Order-Status",
    "States": {
      "GoudaService-Check-Order-Status": {
        "Next": "GoudaService-OrderStatusChanged?",
        "Retry": [
          {
            "ErrorEquals": [
              "Lambda.ServiceException",
              "Lambda.AWSLambdaException",
              "Lambda.SdkClientException"
            ],
            "IntervalSeconds": 2,
            "MaxAttempts": 6,
            "BackoffRate": 2
          }
        ],
        "Type": "Task",
        "ResultPath": "$.prevCheckOrderOutput",
        "Resource": "arn:aws:states:::lambda:invoke",
        "Parameters": {
          "FunctionName": "arn:aws:lambda:us-east-1:089388554565:function:GoudaServiceStateMachin-GoudaServiceStagelocal-kAGtCIjCggr3",
          "Payload.$": "$"
        }
      },
      "GoudaService-WaitStep": {
        "Type": "Wait",
        "Seconds": 10,
        "Next": "GoudaService-Check-Order-Status"
      },
      "GoudaService-OrderStatusTerminal?": {
        "Type": "Choice",
        "Choices": [
          {
            "Variable": "$.prevCheckOrderOutput.Payload.orderStatus",
            "StringEquals": "open",
            "Next": "GoudaService-WaitStep"
          },
          {
            "Variable": "$.prevCheckOrderOutput.Payload.orderStatus",
            "StringEquals": "filled",
            "Next": "GoudaService-OrderInTerminalState"
          },
          {
            "Variable": "$.prevCheckOrderOutput.Payload.orderStatus",
            "StringEquals": "cancelled",
            "Next": "GoudaService-OrderInTerminalState"
          },
          {
            "Variable": "$.prevCheckOrderOutput.Payload.orderStatus",
            "StringEquals": "expired",
            "Next": "GoudaService-OrderInTerminalState"
          }
        ]
      },
      "GoudaService-UpdateOrderStatusStep": {
        "Next": "GoudaService-OrderStatusTerminal?",
        "Type": "Task",
        "ResultPath": "$.updateOrderStatusOutput",
        "Resource": "arn:aws:states:::dynamodb:updateItem",
        "Parameters": {
          "Key": {
            "orderHash": {
              "S.$": "$.orderHash"
            }
          },
          "TableName": "Orders",
          "ExpressionAttributeValues": {
            ":orderStatus": {
              "S": "$.prevCheckOrderOutput.Payload.orderStatus"
            }
          },
          "UpdateExpression": "SET orderStatus = :orderStatus"
        }
      },
      "GoudaService-OrderStatusChanged?": {
        "Type": "Choice",
        "Choices": [
          {
            "Variable": "$.prevCheckOrderOutput.Payload.orderStatusChanged",
            "BooleanEquals": true,
            "Next": "GoudaService-UpdateOrderStatusStep"
          }
        ],
        "Default": "GoudaService-WaitStep"
      },
      "GoudaService-OrderInTerminalState": {
        "Type": "Succeed"
      }
    }
  }