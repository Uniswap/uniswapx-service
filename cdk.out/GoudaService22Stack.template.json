{
 "Resources": {
  "GoudaService22LambdaStackNestedStackGoudaService22LambdaStackNestedStackResource7FD4052A": {
   "Type": "AWS::CloudFormation::Stack",
   "Properties": {
    "TemplateURL": {
     "Fn::Join": [
      "",
      [
       "https://s3.",
       {
        "Ref": "AWS::Region"
       },
       ".",
       {
        "Ref": "AWS::URLSuffix"
       },
       "/",
       {
        "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
       },
       "/128bd3efb3a806151899838332a314095c8f2edd74b00a451976b8b39f56c1d5.json"
      ]
     ]
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "GoudaService22Stack/GoudaService22LambdaStack.NestedStack/GoudaService22LambdaStack.NestedStackResource",
    "aws:asset:path": "GoudaService22StackGoudaService22LambdaStack87EC0FD6.nested.template.json",
    "aws:asset:property": "TemplateURL"
   }
  },
  "GoudaService22APIGAccessLogsE3FE613C": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "GoudaService22Stack/GoudaService22APIGAccessLogs/Resource"
   }
  },
  "GoudaService22963A69F2": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "GoudaService22"
   },
   "Metadata": {
    "aws:cdk:path": "GoudaService22Stack/GoudaService22/Resource"
   }
  },
  "GoudaService22CloudWatchRole21D75DE5": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
       ]
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "GoudaService22Stack/GoudaService22/CloudWatchRole/Resource"
   }
  },
  "GoudaService22Account776D2602": {
   "Type": "AWS::ApiGateway::Account",
   "Properties": {
    "CloudWatchRoleArn": {
     "Fn::GetAtt": [
      "GoudaService22CloudWatchRole21D75DE5",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "GoudaService22963A69F2"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "GoudaService22Stack/GoudaService22/Account"
   }
  },
  "GoudaService22Deployment8DBBEB7F94041f7825f415ed43f84a0033d3505d": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "RestApiId": {
     "Ref": "GoudaService22963A69F2"
    },
    "Description": "Automatically created by the RestApi construct"
   },
   "DependsOn": [
    "GoudaService22dutchauctionOPTIONSD53A98E3",
    "GoudaService22dutchauctionorderOPTIONS7D3ABEF7",
    "GoudaService22dutchauctionorderPOST07EEE7C2",
    "GoudaService22dutchauctionorderA4ED2A85",
    "GoudaService22dutchauction934E4135",
    "GoudaService22OPTIONS65C849C0"
   ],
   "Metadata": {
    "aws:cdk:path": "GoudaService22Stack/GoudaService22/Deployment/Resource"
   }
  },
  "GoudaService22DeploymentStageprodD1E8C9B8": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "RestApiId": {
     "Ref": "GoudaService22963A69F2"
    },
    "AccessLogSetting": {
     "DestinationArn": {
      "Fn::GetAtt": [
       "GoudaService22APIGAccessLogsE3FE613C",
       "Arn"
      ]
     },
     "Format": "{\"requestId\":\"$context.requestId\",\"requestTime\":\"$context.requestTime\",\"httpMethod\":\"$context.httpMethod\",\"resourcePath\":\"$context.resourcePath\",\"status\":\"$context.status\",\"protocol\":\"$context.protocol\",\"responseLength\":\"$context.responseLength\"}"
    },
    "DeploymentId": {
     "Ref": "GoudaService22Deployment8DBBEB7F94041f7825f415ed43f84a0033d3505d"
    },
    "MethodSettings": [
     {
      "DataTraceEnabled": false,
      "HttpMethod": "*",
      "LoggingLevel": "ERROR",
      "ResourcePath": "/*"
     }
    ],
    "StageName": "prod",
    "TracingEnabled": true
   },
   "DependsOn": [
    "GoudaService22Account776D2602"
   ],
   "Metadata": {
    "aws:cdk:path": "GoudaService22Stack/GoudaService22/DeploymentStage.prod/Resource"
   }
  },
  "GoudaService22OPTIONS65C849C0": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Fn::GetAtt": [
      "GoudaService22963A69F2",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "GoudaService22963A69F2"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GoudaService22Stack/GoudaService22/Default/OPTIONS/Resource"
   }
  },
  "GoudaService22dutchauction934E4135": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "GoudaService22963A69F2",
      "RootResourceId"
     ]
    },
    "PathPart": "dutch-auction",
    "RestApiId": {
     "Ref": "GoudaService22963A69F2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "GoudaService22Stack/GoudaService22/Default/dutch-auction/Resource"
   }
  },
  "GoudaService22dutchauctionOPTIONSD53A98E3": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "GoudaService22dutchauction934E4135"
    },
    "RestApiId": {
     "Ref": "GoudaService22963A69F2"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GoudaService22Stack/GoudaService22/Default/dutch-auction/OPTIONS/Resource"
   }
  },
  "GoudaService22dutchauctionorderA4ED2A85": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "GoudaService22dutchauction934E4135"
    },
    "PathPart": "order",
    "RestApiId": {
     "Ref": "GoudaService22963A69F2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "GoudaService22Stack/GoudaService22/Default/dutch-auction/order/Resource"
   }
  },
  "GoudaService22dutchauctionorderOPTIONS7D3ABEF7": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "GoudaService22dutchauctionorderA4ED2A85"
    },
    "RestApiId": {
     "Ref": "GoudaService22963A69F2"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GoudaService22Stack/GoudaService22/Default/dutch-auction/order/OPTIONS/Resource"
   }
  },
  "GoudaService22dutchauctionorderPOSTApiPermissionGoudaService22StackGoudaService22C3EC6EF1POSTdutchauctionorder973A03F5": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GoudaService22LambdaStackNestedStackGoudaService22LambdaStackNestedStackResource7FD4052A",
      "Outputs.GoudaService22StackGoudaService22LambdaStackPostOrderLiveAliasBFA2AD97Ref"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "GoudaService22963A69F2"
       },
       "/",
       {
        "Ref": "GoudaService22DeploymentStageprodD1E8C9B8"
       },
       "/POST/dutch-auction/order"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "GoudaService22Stack/GoudaService22/Default/dutch-auction/order/POST/ApiPermission.GoudaService22StackGoudaService22C3EC6EF1.POST..dutch-auction.order"
   }
  },
  "GoudaService22dutchauctionorderPOSTApiPermissionTestGoudaService22StackGoudaService22C3EC6EF1POSTdutchauctionorder0E948275": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GoudaService22LambdaStackNestedStackGoudaService22LambdaStackNestedStackResource7FD4052A",
      "Outputs.GoudaService22StackGoudaService22LambdaStackPostOrderLiveAliasBFA2AD97Ref"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "GoudaService22963A69F2"
       },
       "/test-invoke-stage/POST/dutch-auction/order"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "GoudaService22Stack/GoudaService22/Default/dutch-auction/order/POST/ApiPermission.Test.GoudaService22StackGoudaService22C3EC6EF1.POST..dutch-auction.order"
   }
  },
  "GoudaService22dutchauctionorderPOST07EEE7C2": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "POST",
    "ResourceId": {
     "Ref": "GoudaService22dutchauctionorderA4ED2A85"
    },
    "RestApiId": {
     "Ref": "GoudaService22963A69F2"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GoudaService22LambdaStackNestedStackGoudaService22LambdaStackNestedStackResource7FD4052A",
          "Outputs.GoudaService22StackGoudaService22LambdaStackPostOrderLiveAliasBFA2AD97Ref"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "GoudaService22Stack/GoudaService22/Default/dutch-auction/order/POST/Resource"
   }
  },
  "GoudaService22IPThrottlingACL": {
   "Type": "AWS::WAFv2::WebACL",
   "Properties": {
    "DefaultAction": {
     "Allow": {}
    },
    "Scope": "REGIONAL",
    "VisibilityConfig": {
     "CloudWatchMetricsEnabled": true,
     "MetricName": "GoudaService22IPBasedThrottling",
     "SampledRequestsEnabled": true
    },
    "CustomResponseBodies": {
     "GoudaService22ThrottledResponseBody": {
      "Content": "{\"errorCode\": \"TOO_MANY_REQUESTS\"}",
      "ContentType": "APPLICATION_JSON"
     }
    },
    "Name": "GoudaService22IPThrottling",
    "Rules": [
     {
      "Action": {
       "Block": {
        "CustomResponse": {
         "CustomResponseBodyKey": "GoudaService22ThrottledResponseBody",
         "ResponseCode": 429
        }
       }
      },
      "Name": "ip",
      "Priority": 0,
      "Statement": {
       "RateBasedStatement": {
        "AggregateKeyType": "FORWARDED_IP",
        "ForwardedIPConfig": {
         "FallbackBehavior": "MATCH",
         "HeaderName": "X-Forwarded-For"
        },
        "Limit": 120
       }
      },
      "VisibilityConfig": {
       "CloudWatchMetricsEnabled": true,
       "MetricName": "GoudaService22IPBasedThrottlingRule",
       "SampledRequestsEnabled": true
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "GoudaService22Stack/GoudaService22IPThrottlingACL"
   }
  },
  "GoudaService22IPThrottlingAssociation": {
   "Type": "AWS::WAFv2::WebACLAssociation",
   "Properties": {
    "ResourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:apigateway:",
       {
        "Ref": "AWS::Region"
       },
       "::/restapis/",
       {
        "Ref": "GoudaService22963A69F2"
       },
       "/stages/",
       {
        "Ref": "GoudaService22DeploymentStageprodD1E8C9B8"
       }
      ]
     ]
    },
    "WebACLArn": {
     "Fn::GetAtt": [
      "GoudaService22IPThrottlingACL",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "GoudaService22Stack/GoudaService22IPThrottlingAssociation"
   }
  },
  "GoudaService225XXAlarm0FC115C4": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 3,
    "Dimensions": [
     {
      "Name": "ApiName",
      "Value": "GoudaService22"
     }
    ],
    "MetricName": "5XXError",
    "Namespace": "AWS/ApiGateway",
    "Period": 300,
    "Statistic": "Average",
    "Threshold": 0.05
   },
   "Metadata": {
    "aws:cdk:path": "GoudaService22Stack/GoudaService22-5XXAlarm/Resource"
   }
  },
  "GoudaService224XXAlarm73977A6E": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 3,
    "Dimensions": [
     {
      "Name": "ApiName",
      "Value": "GoudaService22"
     }
    ],
    "MetricName": "4XXError",
    "Namespace": "AWS/ApiGateway",
    "Period": 300,
    "Statistic": "Average",
    "Threshold": 0.8
   },
   "Metadata": {
    "aws:cdk:path": "GoudaService22Stack/GoudaService22-4XXAlarm/Resource"
   }
  },
  "GoudaService22Latency939F5354": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 3,
    "Dimensions": [
     {
      "Name": "ApiName",
      "Value": "GoudaService22"
     }
    ],
    "ExtendedStatistic": "p90",
    "MetricName": "Latency",
    "Namespace": "AWS/ApiGateway",
    "Period": 300,
    "Threshold": 7500
   },
   "Metadata": {
    "aws:cdk:path": "GoudaService22Stack/GoudaService22-Latency/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/02QQW/DIAyFf8vuhHVRpZ2zTNql1abusOPkgJvSQhwF0qhC/PeZJp1y8uf3DA9cyu2r3DzB5AulL4U1jYzfAdRF1MduBvZ+o6XWy7ij9mOgsc/mg5OA3rQQcIKbjAf0oepNHlhhpRSNXRDv2Fu6OWRkddVxUotLJAMfpXFQ+AYexR7DiXQ2F3q4S8idkzDgOJ7sLHNNwoJrNEjuv3BwxntDnZjgeC1lZPEHm6reiX+qvCdlIPBUEsrSqCcI6iRjZWFw939kSCnj5xj6MayfkLmmTpv5go40yrN/vr5sZbnhHZ+9McXAazAO5WGufwfxGed/AQAA"
   },
   "Metadata": {
    "aws:cdk:path": "GoudaService22Stack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "GoudaService22Endpoint061CFC5D": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "GoudaService22963A69F2"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "GoudaService22DeploymentStageprodD1E8C9B8"
      },
      "/"
     ]
    ]
   }
  },
  "Url": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "GoudaService22963A69F2"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "GoudaService22DeploymentStageprodD1E8C9B8"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}